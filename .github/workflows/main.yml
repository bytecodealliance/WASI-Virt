name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
defaults:
  run:
    shell: bash

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Rust
      run: rustup update nightly --no-self-update && rustup default nightly

    - name: Install wasm32-wasi target
      run: rustup target add wasm32-wasi

    - name: Restore Rust build cache
      uses: actions/cache/restore@v3
      id: rust-build-restore
      with:
        path: target
        key: engine-build-${{ hashFiles('Cargo.lock', 'virtual-adapter/**/*.rs', 'src/**/*.rs', 'tests/components/**/*.rs') }}

    - name: Build
      run: cargo build

    - name: Test
      run: cargo test

    - name: Cache Rust dependencies
      uses: actions/cache/save@v3
      with:
        path: target
        key: engine-build-${{ hashFiles('Cargo.lock', 'virtual-adapter/**/*.rs', 'src/**/*.rs', 'tests/components/**/*.rs') }}
      if: steps.rust-build-restore.outputs.cache-hit != 'true'

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: rustup update nightly && rustup default nightly && rustup component add rustfmt
    - name: Format source code
      run: cargo fmt -- --check
